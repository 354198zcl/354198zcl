- 👋 Hi, I’m @354198zcl
- 👀 I’m interested in ...
- 🌱 I’m currently learning ...
- 💞️ I’m looking to collaborate on ...
- 📫 How to reach me ...

<!---
354198zcl/354198zcl is a ✨ special ✨ repository because its `README.md` (this file) appears on your GitHub profile.
You can click the Preview link to take a look at your changes.
--->
#include <stdio.h>
/*struct Book
{
    char name[20];
    short price;
};
  int main()
  {
      struct Book b1={"c语言程序设计",55};
      printf("书名：%s\n",b1.name);
      printf("价格：%d元\n",b1.price);
      return 0;
  }
*int main ()
{
    int a=10;
    int* p=&a;
    printf("%p",p);
    return 0;
}

//*-解引用操作符，间接操作符

int main()
{
    int ch=0;
    while((ch=getchar())!=EOF)
    {
        putchar(ch);
    }
}*/
/*  int main()                           //n的阶乘：*int main()
{
    int i,n,m=1;
    int sum=0;
    for(n=1;n<=10;i++)
   {
       for(i=n;i>0;i--)
    {
        m=m*i;
    }
      sum=sum+m;

    }

    printf("%d",sum);
}
*/                            //打印10个hehe
 /*   int main()
    {   int i=0,j=0;
        for(i=0;i<10;i++)
         {
             for(;j<10;j++)
            {
            printf("hehe\n");
            }

         }
        return 0;
    }
    break是终止循环，不再循环；
    continue是跳过本次循环，忽略之后的东西，但是可以再循环；
                  //计算1！+2！=3！+........+100!   int main()
 /*  {
       int i=0;
       int n=0;
       int ret=1;
       int sum=0;
       for(n=1;n<=3;n++)
       {
           ret=1;           //一定得重置ret的值；
           for(i=1;i<=n;i++)
           {
               ret=ret*i;

           }
           sum=sum+ret;

       }
       printf("%d",sum);
       return 0;
   }
*/
        //从一个有序数组中查出某一个数，用二分法，依次从中间开始查，可以查log2 n次。
 /*   int main()
    {
        int arr[]={1,2,3,4,5,6,7,8,9,10};
        int k=7;
        int sz=sizeof(arr)/sizeof(arr[0]); //求出数组的长度；数组后面没有/0；
        int left=0;  //左下标；
        int right=sz-1;     //元素个数；
        while(left<=right)
        {
            int mid=(left+right)/2;
            if(arr[mid]>k)
            {
                right=mid-1;
            }
            else if(arr[mid]<k)
            {
                left=mid+1;
            }
           else
            {
                printf("找到了，是%d",mid);
                break;
            }
        }
        if(left>right)
           {
               printf("找不到了");
           }

        return 0;
    }
*/
 /*   #include<string.h>
    #include<windows.h>//对应Sleep函数
    #include<stdlib.h>//对应的system函数
    int main()
    {
        char arr1[]="welcome to bit!!!!!!!";
        char arr2[]="#####################";
        int left=0;
       // int right=sizeof(arr1)/sizeof(arr[0])-2;//因为有/0所以要减二,减一是/0的下标；字符串有/0;
       int right=strlen(arr1)-1;//strlen求的是字符串的长度，不包括/0;
        while(left<=right)
        {
            arr2[left]=arr1[left];
            arr2[right]=arr1[right];
            printf("%s\n",arr2);
            Sleep(1000);//没打印之后停留一秒，单位是毫秒；
            system("cls");//执行系统命令的一个函数-cls-是清空屏幕；
            left++;
            right--;

        }
         printf("%s\n",arr2);
         return 0;
    }
    */
/*    int main()
{
    int i=0;
    int password[20]={0};
    for(i=0;i<3;i++)
    {
        printf("请输入密码：");
        scanf("%s",password);
        if(strcmp(password,"123456")==0)    //strcmp是比较数组字符串的函数，不能用等于号比较
        {
            printf("登陆成功\n");
            printf("%d",i);
            break;
        }
        else
            printf("密码错误\n");
    }
    if(i==3)
        printf("请退出");
        return 0;

}
*/
/*    int main()
 {
     int i=0;
     for (i=0;i<10;i++)
     {
         if(i=5)  //是赋值号不是等于号；判断条件恒成立；
            printf("%d",i);
     }
     return 0；
     //死循环打印5；
 }
*/
/*    int func(int a=1)
      {
          int b;
          switch(a)         //()里必须是整形常量表达式；可以是long ,int, char(字符型存放着ascII值);
          {
              case 1;b=30;
              case 2;b=20;
              case 3;b=16;  //在switch语句中没有break则一直执行，如果a=1，那么最后输出为b=0，
              default;b=0;  //default可以任意放；

          }
          return b;
      }
*/
                //从大到小排列三个数；
/*    int main()
    {
        int a,b,c;
        int tmp;
        printf("请输入三个数");
        scanf("%d%d%d",&a,&b,&c);
        if(a<b)
        {
           tmp=a;
           a=b;
           b=tmp;

        }
        if(a<c)
        {
            tmp=a;
            a=c;
            c=tmp;
        }
        if(b<c)
        {
            tmp=b;
            b=c;
            c=tmp;
        }
        printf("%d  %d %d\n",a,b,c);
    }
*/
                    //求最大公约数；
/*    int main()
    {
        int a,b;
        int r;
        printf("请输入两个数");
        scanf("%d%d",&a,&b);
        while(a%b)
        {
            r=a%b;
            a=b;                //辗转反侧法，
            b=r;
        }
        if(a%b==0)
            printf("最大公约数是%d",b);
        return 0;
    }
*/
/*        int main()
    {
        int year=0;
        int count=0;
             for(year=2000;year<=3000;year++)
             {
                 if(year%4==0&&year%100!=0)         //1.能被4整除不能被100整除的是闰年
                                                        //2，能被400整除的是闰年，

                   {
                       printf("%d\n",year);
                       count++;

                   }
                 else if(year%400==0)
                    {
                         printf("%d\n",year);
                       count++;
                    }
             }
             printf("%d个闰年",count);
    return 0;

    }
*/        //判断一个数是不是素数；辗转相除法；
     #include<math.h>
        int main()
        {                           //素数是一个只能被1和自身整除的数
            int i=0;
            int count=0;
            for(i=100;i<=200;i++)
            {
               int j=0;
               for(j=2;j<=sqrt(i);j++)         //sqrt是开平方 ，如果不是素数i=a*b,那么a和b中有至少有一个数小于sqrt(i)
               {                            //试除法
                   if(i%j==0)            //不是素数
                    break;
               }
               if(j>sqrt(i) )          //需要过滤这是跳出来的有不是素数和素数，如果j=i，且不能被整除那么该数就是素数；
              {
                   printf("%d\n",i);
                   count++;
              }
            }
            printf("count=%d",count);
        }
